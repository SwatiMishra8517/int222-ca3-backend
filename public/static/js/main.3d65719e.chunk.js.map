{"version":3,"sources":["api/client.js","Components/Login.js","Components/Signup.js","Components/Profile.js","SocketClient.js","helpers/sound.js","Components/ChatBox.js","Components/Contacts.js","Components/Nav/Tab.js","Components/Nav/Nav.js","Components/ChatApp.js","App.js","Context.js","index.js"],"names":["headers","client","url","fetch","then","e","json","body","method","JSON","stringify","Login","useContext","Context","setUser","user","useState","email","setEmail","password","setPassword","error","setError","history","useHistory","to","className","onSubmit","preventDefault","post","res","push","localStorage","setItem","style","color","onChange","target","value","type","placeholder","contextType","Signup","name","setName","username","setUsername","success","setSuccess","setTimeout","Profile","display","onClick","cursor","margin","alignItems","alignSelf","padding","background","borderRadius","size","flexDirection","justifyContent","flex","width","objectFit","alt","src","test","this","socket","window","io","on","onConnect","onMessage","data","console","log","sounds","NEW_MESSAGE","Audio","USER_JOINED","MESSAGE_SENT","ChatBox","timeout","React","isTyping","setIsTyping","contacts","messages","currentContact","setMessages","CONTACT","find","uid","MESSAGES","text","document","getElementById","messageRef","useRef","scrollToBottom","current","scrollTo","top","scrollHeight","behavior","useEffect","prev","map","unread","undefined","length","height","typing","sender","ref","message","fontWeight","fontSize","dangerouslySetInnerHTML","__html","textAlign","moment","Date","time","calendar","id","contentEditable","onKeyPress","clearTimeout","SocketClient","emit","innerText","replace","trim","play","now","Contacts","setCurrentContact","contactsF","setContactsF","class","toLowerCase","filter","u","startsWith","unreadMessages","m","lastMessage","online","whiteSpace","split","slice","join","Tab","props","Icon","icon","paddingTop","label","Nav","FaHome","FaUserAlt","removeItem","disconnect","location","href","FiLogOut","ChatApp","setContacts","App","getItem","parse","users","allUsers","_id","userId","groupChat","from","exact","path","createContext","AppProvider","children","Provider","ReactDOM","render"],"mappings":"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","file":"static/js/main.3d65719e.chunk.js","sourcesContent":["const headers = {\r\n    \"Content-Type\": \"application/json\",\r\n};\r\n\r\nconst client = {};\r\n\r\nclient.get = (url) => {\r\n    return fetch(url).then((e) => e.json());\r\n};\r\n\r\nclient.post = (url, body) => {\r\n    return fetch(url, {\r\n        method: \"POST\",\r\n        body: JSON.stringify(body),\r\n        headers,\r\n    }).then((e) => e.json());\r\n};\r\n\r\nexport default client;\r\n","import React, { Component, useContext, useState } from 'react'\r\nimport './CSS/login.css'\r\nimport Context from \"../Context\"\r\nimport client from '../api/client';\r\nimport { useHistory, Redirect, Link } from \"react-router-dom\";\r\n\r\nfunction Login(){\r\n    const {setUser,user} = useContext(Context);\r\n    const [email, setEmail] = useState(\"\")\r\n    const [password, setPassword] = useState(\"\")\r\n    const [error, setError] = useState(\"\")\r\n    const history = useHistory();\r\n\r\n    const handleSubmit = (e)=>{\r\n        e.preventDefault()\r\n        \r\n        client\r\n            .post(\"/auth/login\", {\r\n                email,\r\n                password,\r\n            })\r\n            .then((res) => {\r\n                if (res.error) {\r\n                    setError(res.error);\r\n                } else {\r\n                    // setError(JSON.stringify(res))\r\n                    setUser(res.user);\r\n                    history.push(\"/\");\r\n                    localStorage.setItem(\"user\", JSON.stringify(res.user));\r\n                }\r\n            });\r\n    }\r\n\r\n    if(user){\r\n        return <Redirect to=\"/\" />\r\n    }\r\n\r\n    return (\r\n        <div className=\"login\">\r\n            <form onSubmit={handleSubmit}>\r\n                <h1>Login</h1>\r\n                <p style={{ color: \"red\" }}>{error}</p>\r\n                <input\r\n                    onChange={(e) => setEmail(e.target.value)}\r\n                    type=\"email\"\r\n                    placeholder=\"Email\"\r\n                />\r\n                <input\r\n                    onChange={(e) => setPassword(e.target.value)}\r\n                    type=\"password\"\r\n                    placeholder=\"Password\"\r\n                />\r\n                <input type=\"submit\" value=\"login\" />\r\n                <p>\r\n                    If not registered then <Link to=\"/signup\">Signup</Link>\r\n                </p>\r\n            </form>\r\n        </div>\r\n    );\r\n}\r\n\r\nLogin.contextType = Context;\r\n\r\nexport default Login\r\n","import React, { Component, useState, useContext } from \"react\";\r\nimport \"./CSS/login.css\";\r\nimport client from \"../api/client\";\r\nimport { Link, useHistory } from \"react-router-dom\";\r\n\r\nfunction Signup() {\r\n    const [name, setName] = useState(\"\");\r\n    const [email, setEmail] = useState(\"\");\r\n    const [password, setPassword] = useState(\"\");\r\n    const [username, setUsername] = useState(\"\");\r\n    const [error, setError] = useState(\"\");\r\n    const [success, setSuccess] = useState(\"\");\r\n    const history = useHistory();\r\n\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n\r\n        client\r\n            .post(\"/auth/signup\", {\r\n                name,\r\n                email,\r\n                password,\r\n                username,\r\n            })\r\n            .then((res) => {\r\n                if (res.error) {\r\n                    setError(res.error);\r\n                } else {\r\n                    setSuccess(\"you are registered successfully\");\r\n                    setTimeout(() => {\r\n                        history.push(\"/login\");\r\n                    }, 2000);\r\n                }\r\n            });\r\n    };\r\n    return (\r\n        <div className=\"login\">\r\n            <form onSubmit={handleSubmit}>\r\n                <h1>Signup</h1>\r\n                <p style={{ color: \"red\" }}>{error}</p>\r\n                <p style={{ color: \"green\" }}>{success}</p>\r\n                <input\r\n                    onChange={(e) => setName(e.target.value)}\r\n                    type=\"text\"\r\n                    name=\"name\"\r\n                    placeholder=\"name\"\r\n                />\r\n                <input\r\n                    onChange={(e) => setUsername(e.target.value)}\r\n                    type=\"text\"\r\n                    placeholder=\"username\"\r\n                />\r\n                <input\r\n                    onChange={(e) => setEmail(e.target.value)}\r\n                    type=\"text\"\r\n                    name=\"email\"\r\n                    placeholder=\"email\"\r\n                />\r\n                <input\r\n                    onChange={(e) => setPassword(e.target.value)}\r\n                    type=\"password\"\r\n                    name=\"pwd\"\r\n                    placeholder=\"password\"\r\n                />\r\n                <input type=\"submit\" value=\"signup\" />\r\n                <p>\r\n                    If already registered then <Link to=\"/login\">Login</Link>\r\n                </p>\r\n            </form>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Signup;\r\n","import React, { useContext } from \"react\";\r\nimport { Context } from \"../Context\";\r\nimport { Redirect, useHistory } from \"react-router-dom\";\r\nimport { IoIosArrowBack } from \"react-icons/io\";\r\n\r\nfunction Profile() {\r\n    // let user = localStorage.getItem(\"user\")\r\n    let { user } = useContext(Context);\r\n    const history = useHistory();\r\n    // if(user){\r\n    //     user = JSON.parse(user)\r\n    // }\r\n    // else{\r\n    //     user = {}\r\n    // }\r\n    if (!user) {\r\n        return <Redirect to=\"/\" />;\r\n    }\r\n    return (\r\n        <div>\r\n            <div style={{ display: \"flex\" }}>\r\n                <div\r\n                    onClick={() => {\r\n                        history.push(\"/\");\r\n                    }}\r\n                    style={{\r\n                        cursor: \"pointer\",\r\n                        margin: 10,\r\n                        display: \"flex\",\r\n                        alignItems: \"center\",\r\n                        alignSelf: \"flex-start\",\r\n                        padding: 10,\r\n                        background: \"steelblue\",\r\n                        color: \"white\",\r\n                        borderRadius: 5,\r\n                    }}\r\n                >\r\n                    <IoIosArrowBack size={32} /> Go to Home\r\n                </div>\r\n            </div>\r\n            <div\r\n                style={{\r\n                    display: \"flex\",\r\n                    flexDirection: \"column\",\r\n                    alignItems: \"center\",\r\n                    justifyContent: \"center\",\r\n                }}\r\n            >\r\n                <div flex=\"4\">\r\n                    <img\r\n                        style={{ width: \"200px\", objectFit: \"contain\" }}\r\n                        alt=\"user\"\r\n                        src={\r\n                            !/\\w+[ai]$/.test(user.name)\r\n                                ? \"https://readyrefrigeration.ca/sites/default/files/styles/headshot/adaptive-image/public/nobody.jpg\"\r\n                                : \"https://www.kindpng.com/picc/m/695-6955645_female-user-female-user-icon-png-transparent-png.png\"\r\n                        }\r\n                    />\r\n\r\n                    <h1>{user.name}</h1>\r\n                    <p>@{user.username}</p>\r\n                    <p>{user.email}</p>\r\n                    {/* <p>email: {user.email}</p> */}\r\n                    {/* <p>Phone No. : {user.mobile}</p> */}\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Profile;\r\n","class SocketClient {\r\n    constructor() {\r\n        this.socket = window.io(\"/\");\r\n        this.socket.on(\"connect\", (e) => {\r\n            this.onConnect();\r\n            this.onMessage();\r\n        });\r\n    }\r\n    onConnect() {\r\n        // alert(\"Connected to backend\");\r\n    }\r\n    onMessage() {\r\n        this.socket.on(\"sentMessage\", (data) => {\r\n            console.log(\"RECEIVED\", data);\r\n        });\r\n    }\r\n}\r\n\r\nexport default new SocketClient().socket;\r\n","const newMessage = new Audio(\r\n    \"https://www.mobilesringtones.com/static/p/ringtones/2017/10/02/15726/15726.mp3?title=15726_download_iphone_sms_original_ringtone_iphone_sms_ringtones.mp3\"\r\n);\r\n\r\nconst newUser = new Audio(\r\n    \"https://www.mobilesringtones.com/static/p/ringtones/2017/11/26/15953/15953.mp3?title=15953_download_mesg_ting_ringtone_apple_sms_ringtones.mp3\"\r\n);\r\n\r\nconst messageSent = new Audio(\r\n    \"https://fsb.zobj.net/download/bHTSKVD0pv8_4rq--Z8g7fhojB2O5VH143lYmr205vVtLj8tnIh7yL9elamAe88Zs2z7EgWnCdeLaGein239bmckpam5mKQK8LIsw1BoMNNmTIUW47Y0lCgzGwN0/?a=web&c=72&f=pop_up_sms_tone.mp3&special=1603348222-f3GLlOXpN82goF5WwVpLp8aUmOZjkPgVdmnDje6rCso%3D\"\r\n);\r\n\r\nconst sounds = {\r\n    NEW_MESSAGE: newMessage,\r\n    USER_JOINED: newUser,\r\n    MESSAGE_SENT: messageSent,\r\n};\r\n\r\nexport default sounds;\r\n","import React, { useContext, useState } from \"react\";\r\nimport \"./CSS/ChatBox.css\";\r\nimport { Context } from \"../Context\";\r\nimport socket from \"../SocketClient\";\r\nimport { useEffect } from \"react\";\r\nimport SocketClient from \"../SocketClient\";\r\nimport moment from \"moment\";\r\nimport sounds from \"../helpers/sound\";\r\nimport { BsArrowDownShort } from \"react-icons/bs\";\r\n\r\nfunction ChatBox() {\r\n    const { user } = useContext(Context);\r\n    let timeout = null;\r\n    const [isTyping, setIsTyping] = React.useState(false);\r\n    const { contacts, messages, currentContact, setMessages } = useContext(\r\n        Context\r\n    );\r\n    const CONTACT = contacts?.find((user) => user.uid === currentContact) || {};\r\n    const MESSAGES = messages[currentContact] || [];\r\n    const text = document.getElementById(\"textarea\");\r\n    const messageRef = React.useRef();\r\n\r\n    const scrollToBottom = () => {\r\n        messageRef.current.scrollTo({\r\n            top: messageRef.current.scrollHeight,\r\n            behavior: \"smooth\",\r\n        });\r\n    };\r\n\r\n    useEffect(() => {\r\n        setMessages((prev) => {\r\n            if (!prev[currentContact]) {\r\n                prev[currentContact] = [];\r\n            }\r\n            return {\r\n                ...prev,\r\n                [currentContact]: [...prev[currentContact]].map((e) => ({\r\n                    ...e,\r\n                    unread: undefined,\r\n                })),\r\n            };\r\n        });\r\n    }, [currentContact]);\r\n\r\n    useEffect(() => {\r\n        if (MESSAGES[MESSAGES.length - 1]?.user) {\r\n            scrollToBottom();\r\n        }\r\n    }, [messages]);\r\n\r\n    function send() {\r\n        let message = text.innerText;\r\n        message = message.replace(/\\n/g, \"<br>\").trim();\r\n        console.log(message);\r\n        if (message.trim() === \"\") {\r\n            return;\r\n        }\r\n        socket.emit(\"message\", { text: message, to: currentContact });\r\n        sounds.MESSAGE_SENT.play();\r\n        text.innerText = \"\";\r\n        setMessages((prev) => {\r\n            if (!prev[currentContact]) {\r\n                prev[currentContact] = [];\r\n            }\r\n            return {\r\n                ...prev,\r\n                [currentContact]: [\r\n                    ...prev[currentContact],\r\n                    { text: message, user: true, time: Date.now() },\r\n                ],\r\n            };\r\n        });\r\n    }\r\n    const onTyping = () => {\r\n        clearTimeout(timeout);\r\n        if (!isTyping) SocketClient.emit(\"typeStart\", { to: currentContact });\r\n        setIsTyping(true);\r\n        timeout = setTimeout(() => {\r\n            if (isTyping) {\r\n                SocketClient.emit(\"typeEnd\", { to: currentContact });\r\n                setIsTyping(false);\r\n            }\r\n        }, 2000);\r\n    };\r\n    return (\r\n        <div className=\"chatbox\">\r\n            <header\r\n                style={{\r\n                    display: \"flex\",\r\n                    alignItems: \"center\",\r\n                    padding: \"10px 0px 10px 20px\",\r\n                }}\r\n            >\r\n                <img\r\n                    style={{ height: 40, width: 40, borderRadius: \"50%\" }}\r\n                    alt=\"user\"\r\n                    src={\r\n                        !/\\w+[ai]$/.test(user.name)\r\n                            ? CONTACT.uid === \"groupChat\"\r\n                                ? \"https://www.flaticon.com/svg/static/icons/svg/166/166258.svg\"\r\n                                : \"https://readyrefrigeration.ca/sites/default/files/styles/headshot/adaptive-image/public/nobody.jpg\"\r\n                            : \"https://www.kindpng.com/picc/m/695-6955645_female-user-female-user-icon-png-transparent-png.png\"\r\n                    }\r\n                />\r\n                <div\r\n                    style={{\r\n                        margin: \"0px 20px\",\r\n                    }}\r\n                >\r\n                    <h1>{CONTACT.username}</h1>\r\n                    {CONTACT.typing ? (\r\n                        <div style={{ color: \"white\", margin: 0, padding: 0 }}>\r\n                            {CONTACT.sender\r\n                                ? CONTACT.sender + \": typing...\"\r\n                                : \"typing...\"}\r\n                        </div>\r\n                    ) : (\r\n                        \"\"\r\n                    )}\r\n                </div>\r\n            </header>\r\n            <div className=\"sections\" ref={messageRef}>\r\n                {MESSAGES.map((message) => {\r\n                    return (\r\n                        <div\r\n                            style={{\r\n                                display: \"flex\",\r\n                                flexDirection: \"column\",\r\n                            }}\r\n                        >\r\n                            <div\r\n                                className={`${\r\n                                    message.user ||\r\n                                    message.sender === user.username\r\n                                        ? \"message_sender\"\r\n                                        : \"message_receiver\"\r\n                                } message`}\r\n                            >\r\n                                {message.sender &&\r\n                                    message.sender !== user.username && (\r\n                                        <div\r\n                                            style={{\r\n                                                color: \"#253757\",\r\n                                                fontWeight: \"bold\",\r\n                                                fontSize: \"90%\",\r\n                                            }}\r\n                                        >\r\n                                            {message.sender}\r\n                                        </div>\r\n                                    )}\r\n                                <span\r\n                                    dangerouslySetInnerHTML={{\r\n                                        __html: message.text,\r\n                                    }}\r\n                                ></span>\r\n                                <div\r\n                                    style={{\r\n                                        color: \"#c1c1c1\",\r\n                                        fontSize: \"70%\",\r\n                                        alignSelf: \"flex-end\",\r\n                                        textAlign: \"right\",\r\n                                    }}\r\n                                >\r\n                                    {moment(new Date(message.time)).calendar()}\r\n                                </div>\r\n                            </div>\r\n                            {/* {\r\n                                    message.user && <div className=\"message message_sender\">{message.text}</div>\r\n                                }\r\n                                {\r\n                                    !message.user && <div className=\"message message_receiver\">{message.text}</div>\r\n                                } */}\r\n                        </div>\r\n                    );\r\n                })}\r\n            </div>\r\n            <footer>\r\n                <div className=\"scroll-top\" onClick={scrollToBottom}>\r\n                    <BsArrowDownShort size={34} color=\"white\" />\r\n                </div>\r\n                {/* <div id=\"search-container\">\r\n                    <div>\r\n                        <div class=\"material-icons icon\">search</div>\r\n                            <input id=\"search\" type=\"text\" placeholder=\"item...\" />\r\n                    </div>\r\n                </div> */}\r\n                <div id=\"text-container\">\r\n                    <p\r\n                        id=\"textarea\"\r\n                        placeholder=\"Type a message..\"\r\n                        contentEditable={true}\r\n                        onKeyPress={onTyping}\r\n                    ></p>\r\n                    <button onClick={send}>send</button>\r\n                </div>\r\n            </footer>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default ChatBox;\r\n","import React, { Component, useState, useContext } from \"react\";\r\nimport \"./CSS/Contacts.css\";\r\nimport { Context } from \"../Context\";\r\nimport { useEffect } from \"react\";\r\nimport { GrSearch } from \"react-icons/gr\";\r\nimport { MdDone } from \"react-icons/md\";\r\n\r\nfunction Contacts() {\r\n    const {\r\n        user: me,\r\n        contacts,\r\n        setCurrentContact,\r\n        currentContact,\r\n        messages,\r\n    } = useContext(Context);\r\n    const [contactsF, setContactsF] = useState(contacts);\r\n    useEffect(() => {\r\n        setContactsF(contacts);\r\n    }, [contacts]);\r\n    const filterContacts = (e) => {\r\n        const text = e.target.value.toLowerCase();\r\n        setContactsF(\r\n            contacts.filter((u) => u.username.toLowerCase().startsWith(text))\r\n        );\r\n    };\r\n    return (\r\n        <div class=\"container\">\r\n            <div className=\"search\">\r\n                <GrSearch size={20} />\r\n                <input\r\n                    type=\"search\"\r\n                    placeholder=\"Search contact\"\r\n                    onChange={filterContacts}\r\n                />\r\n            </div>\r\n            <div className=\"friends\">\r\n                {!contacts && <div>Loading contacts...</div>}\r\n                {contactsF?.length == 0 && <div>No contacts to show.</div>}\r\n                {contactsF?.map((user) => {\r\n                    const MESSAGES = messages[user.uid] || [];\r\n                    const unreadMessages = MESSAGES.filter((m) => m.unread)\r\n                        .length;\r\n                    const lastMessage = MESSAGES[MESSAGES.length - 1];\r\n                    return (\r\n                        <div\r\n                            className={`${\r\n                                user.uid === currentContact\r\n                                    ? \"active_contact\"\r\n                                    : \"\"\r\n                            } contact`}\r\n                            onClick={(e) => setCurrentContact(user.uid)}\r\n                        >\r\n                            <div\r\n                                style={{\r\n                                    display: \"flex\",\r\n                                    alignItems: \"center\",\r\n                                }}\r\n                            >\r\n                                <img\r\n                                    style={{\r\n                                        height: 40,\r\n                                        width: 40,\r\n                                        borderRadius: \"50%\",\r\n                                    }}\r\n                                    alt=\"user\"\r\n                                    src={\r\n                                        !/\\w+[ai]$/.test(user.name)\r\n                                            ? user.uid === \"groupChat\"\r\n                                                ? \"https://www.flaticon.com/svg/static/icons/svg/166/166258.svg\"\r\n                                                : \"https://readyrefrigeration.ca/sites/default/files/styles/headshot/adaptive-image/public/nobody.jpg\"\r\n                                            : \"https://www.kindpng.com/picc/m/695-6955645_female-user-female-user-icon-png-transparent-png.png\"\r\n                                    }\r\n                                />\r\n                                <div className=\"contact_container\">\r\n                                    <div className=\"contact_name\">\r\n                                        {user.username}\r\n                                        {user.online && (\r\n                                            <div className=\"online\"></div>\r\n                                        )}\r\n                                    </div>\r\n                                    <div\r\n                                        style={{\r\n                                            fontSize: \"90%\",\r\n                                            color: \"grey\",\r\n                                            whiteSpace: \"nowrap\",\r\n                                            padding: \"5px 0 0 0\",\r\n                                            display: \"flex\",\r\n                                            alignItems: \"center\",\r\n                                        }}\r\n                                    >\r\n                                        {MESSAGES.length > 0 &&\r\n                                        !user.typing &&\r\n                                        lastMessage?.user ? (\r\n                                            <MdDone\r\n                                                style={{ padding: \"0 5px 0 0\" }}\r\n                                            />\r\n                                        ) : lastMessage?.sender &&\r\n                                          !user.typing ? (\r\n                                            lastMessage.sender + \": \"\r\n                                        ) : (\r\n                                            \"\" || \"\"\r\n                                        )}\r\n                                        {user.typing ? (\r\n                                            <div\r\n                                                style={{\r\n                                                    color: \"green\",\r\n                                                    fontWeight: \"bold\",\r\n                                                }}\r\n                                            >\r\n                                                {user.sender\r\n                                                    ? user.sender +\r\n                                                      \": typing...\"\r\n                                                    : \"typing...\"}\r\n                                            </div>\r\n                                        ) : (\r\n                                            lastMessage && (\r\n                                                <div\r\n                                                    style={{\r\n                                                        fontWeight: lastMessage.unread\r\n                                                            ? \"bold\"\r\n                                                            : \"normal\",\r\n                                                    }}\r\n                                                >\r\n                                                    {lastMessage?.text\r\n                                                        ?.replace(/<br>/g, \" \")\r\n                                                        .split(\"\")\r\n                                                        .slice(0, 35)\r\n                                                        .join(\"\") + \"...\" || \"\"}\r\n                                                </div>\r\n                                            )\r\n                                        )}\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                            {unreadMessages > 0 &&\r\n                                user.uid !== currentContact && (\r\n                                    <div className=\"badge\">\r\n                                        {unreadMessages}\r\n                                    </div>\r\n                                )}\r\n                        </div>\r\n                    );\r\n                })}\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\nexport default Contacts;\r\n","import React from 'react'\r\nimport \"./Tab.css\"\r\n\r\nfunction Tab(props) {\r\n    const Icon = props.icon\r\n    return (\r\n        <div className=\"navigation__tab\" {...props}>\r\n            <Icon style={{color:\"white\",fontSize:props.size}} />\r\n            <div style={{color:\"white\",paddingTop:\"10px\"}}>{props.label}</div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Tab\r\n","import React, { Component, useContext } from \"react\";\r\nimport \"./Nav.css\";\r\nimport { FaBeer, FaHome, FaUserAlt, FaUsers } from \"react-icons/fa\";\r\nimport { FiLogOut } from \"react-icons/fi\";\r\nimport Tab from \"./Tab\";\r\nimport { useHistory, Link } from \"react-router-dom\";\r\nimport Context from \"../../Context\";\r\nimport SocketClient from \"../../SocketClient\";\r\n\r\nfunction Nav() {\r\n    const history = useHistory();\r\n    const { setUser } = useContext(Context);\r\n    return (\r\n        <div className=\"Nav\">\r\n            <Link to=\"/\" className=\"nav-link\">\r\n                <Tab label=\"Home\" icon={FaHome} size={32} />\r\n            </Link>\r\n            <Link to=\"/profile\" className=\"nav-link\">\r\n                <Tab label=\"Profile\" icon={FaUserAlt} size={32} />\r\n            </Link>\r\n            <Tab\r\n                onClick={() => {\r\n                    localStorage.removeItem(\"user\");\r\n                    setUser(null);\r\n                    SocketClient.disconnect();\r\n                    window.location.href = \"/login\";\r\n                }}\r\n                label=\"Logout\"\r\n                icon={FiLogOut}\r\n                size={32}\r\n            />\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Nav;\r\n","import React, { Component, useContext } from 'react'\r\nimport ChatBox from './ChatBox'\r\nimport Contacts from './Contacts'\r\nimport  Nav from './Nav/Nav'\r\nimport Context from '../Context'\r\nimport { Redirect } from 'react-router-dom'\r\nimport client from '../api/client'\r\n\r\nfunction ChatApp(){\r\n    const { user, setContacts, setCurrentContact } = useContext(Context);\r\n    if(!user){\r\n        return <Redirect to='/login' />\r\n    }\r\n    return (\r\n        <div>\r\n            <ChatBox/>\r\n            <Contacts/>\r\n            <Nav/>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ChatApp\r\n","import React, { Component, useState, useEffect, useContext } from \"react\";\r\n\r\nimport Login from \"./Components/Login\";\r\nimport Signup from \"./Components/Signup\";\r\nimport Profile from \"./Components/Profile\";\r\nimport ChatApp from \"./Components/ChatApp\";\r\n\r\n// Uncaught SyntaxError: Unexpected token '!'\r\n\r\n// React context API\r\n\r\nimport { BrowserRouter as Router, Switch, Route, Link } from \"react-router-dom\";\r\nimport SocketClient from \"./SocketClient\";\r\nimport Context from \"./Context\";\r\nimport sound from \"./helpers/sound\";\r\nimport sounds from \"./helpers/sound\";\r\n\r\nexport function App() {\r\n    const {\r\n        setUser,\r\n        user,\r\n        setContacts,\r\n        setMessages,\r\n        currentContact,\r\n        contacts,\r\n        setCurrentContact,\r\n    } = useContext(Context);\r\n    useEffect(() => {\r\n        let u = localStorage.getItem(\"user\");\r\n        if (u) {\r\n            console.log(u);\r\n            u = JSON.parse(u);\r\n            setUser(u);\r\n        }\r\n        SocketClient.on(\"allUsers\", (users) => {\r\n            if (users.length == 0) {\r\n                setContacts([]);\r\n                return;\r\n            }\r\n            let allUsers = users.map((user) => ({ ...user, uid: user._id }));\r\n            const group = { uid: \"groupChat\", username: \"Mega Chat\" };\r\n            setContacts([...allUsers, group]);\r\n            setCurrentContact(allUsers[0].uid);\r\n        });\r\n        SocketClient.on(\"newUser\", (userId) => {\r\n            setContacts((users) =>\r\n                users?.map((e) => {\r\n                    return e.uid === userId ? { ...e, online: true } : e;\r\n                })\r\n            );\r\n        });\r\n        SocketClient.on(\"userLeft\", (userId) => {\r\n            setContacts((users) =>\r\n                users?.map((e) => {\r\n                    return e.uid === userId ? { ...e, online: false } : e;\r\n                })\r\n            );\r\n        });\r\n\r\n        SocketClient.on(\"groupChats\", (data) => {\r\n            setMessages((prev) => {\r\n                if (!prev.groupChat) {\r\n                    prev.groupChat = [];\r\n                }\r\n                return {\r\n                    ...prev,\r\n                    groupChat: data.map((e) => ({\r\n                        ...e,\r\n                        sender: e.from,\r\n                        user: e.from === u?.username,\r\n                    })),\r\n                };\r\n            });\r\n        });\r\n\r\n        SocketClient.on(\"receiveMessage\", (data) => {\r\n            let from = data.from;\r\n            if (data.sender) {\r\n                from = \"groupChat\";\r\n                console.log(contacts);\r\n            }\r\n            console.log(data);\r\n            if (data.typing !== undefined) {\r\n                if (data.typing) {\r\n                    setContacts((prev) =>\r\n                        prev.map((e) => {\r\n                            if (e.uid === from) {\r\n                                return {\r\n                                    ...e,\r\n                                    typing: true,\r\n                                    sender: data.sender,\r\n                                };\r\n                            }\r\n                            return e;\r\n                        })\r\n                    );\r\n                } else {\r\n                    setContacts((prev) =>\r\n                        prev.map((e) => {\r\n                            if (e.uid === from) {\r\n                                return {\r\n                                    ...e,\r\n                                    typing: false,\r\n                                    sender: data.sender,\r\n                                };\r\n                            }\r\n                            return e;\r\n                        })\r\n                    );\r\n                }\r\n                return;\r\n            }\r\n            sounds.NEW_MESSAGE.play();\r\n            setMessages((prev) => {\r\n                if (!prev[from]) {\r\n                    prev[from] = [];\r\n                }\r\n                return {\r\n                    ...prev,\r\n                    [from]: [\r\n                        ...prev[from],\r\n                        {\r\n                            text: data.text,\r\n                            unread: true,\r\n                            sender:\r\n                                from === \"groupChat\" ? data.sender : undefined,\r\n                            time: Date.now(),\r\n                        },\r\n                    ],\r\n                };\r\n            });\r\n        });\r\n    }, []);\r\n    useEffect(() => {\r\n        if (user) {\r\n            SocketClient.emit(\"join\", user);\r\n        }\r\n    }, [user]);\r\n    return (\r\n        <Router>\r\n            <div>\r\n                <Switch>\r\n                    <Route exact path=\"/\">\r\n                        <ChatApp />\r\n                    </Route>\r\n                    <Route path=\"/login\">\r\n                        <Login />\r\n                    </Route>\r\n                    <Route path=\"/profile\">\r\n                        <Profile />\r\n                    </Route>\r\n                    <Route path=\"/signup\">\r\n                        <Signup />\r\n                    </Route>\r\n                </Switch>\r\n            </div>\r\n        </Router>\r\n    );\r\n}\r\n\r\nexport default App;\r\n","import React, { createContext } from \"react\";\r\nimport { useState } from \"reinspect\";\r\nimport App from \"./App\";\r\n\r\nexport const Context = createContext()\r\n\r\nexport function AppProvider({children}){\r\n    const [user, setUser] = React.useState(null);\r\n    const [contacts, setContacts] = useState(null, \"contacts\");\r\n    const [messages, setMessages] = useState({}, \"messages\");\r\n    const [currentContact, setCurrentContact] = useState(\r\n        null,\r\n        \"currentContact\"\r\n    );\r\n\r\n    return (\r\n        <Context.Provider value={{\r\n            user,setUser,\r\n            messages,setMessages,\r\n            contacts,setContacts,\r\n            currentContact,setCurrentContact\r\n            }} >\r\n                {children}\r\n        </Context.Provider>\r\n    )\r\n}\r\n\r\nexport default Context","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport {AppProvider} from './Context';\r\nimport App from \"./App\";\r\nimport { StateInspector } from 'reinspect'\r\n\r\nReactDOM.render(\r\n  <StateInspector name=\"Chat\">\r\n    <AppProvider>\r\n    <App />\r\n  </AppProvider>\r\n  </StateInspector>,\r\n  document.getElementById('root')\r\n);\r\n"],"sourceRoot":""}