{"version":3,"sources":["api/client.js","Components/Login.js","Components/Signup.js","Components/Profile.js","SocketClient.js","helpers/sound.js","Components/ChatBox.js","Components/Contacts.js","Components/Nav/Tab.js","Components/Nav/Nav.js","Components/ChatApp.js","App.js","Context.js","index.js"],"names":["headers","client","url","fetch","then","e","json","body","method","JSON","stringify","Login","useContext","Context","setUser","user","useState","email","setEmail","password","setPassword","error","setError","history","useHistory","to","className","onSubmit","preventDefault","post","res","push","localStorage","setItem","style","color","onChange","target","value","type","placeholder","contextType","Signup","name","setName","username","setUsername","success","setSuccess","setTimeout","Profile","display","onClick","cursor","margin","alignItems","alignSelf","padding","background","borderRadius","size","flexDirection","justifyContent","flex","this","socket","window","io","on","onConnect","onMessage","data","console","log","message","emit","text","sounds","NEW_MESSAGE","Audio","USER_JOINED","MESSAGE_SENT","ChatBox","contacts","messages","currentContact","setMessages","CONTACT","find","uid","MESSAGES","document","getElementById","messageRef","React","useRef","scrollToBottom","current","scrollTo","top","scrollHeight","behavior","useEffect","prev","map","unread","undefined","length","marginLeft","ref","sender","fontSize","dangerouslySetInnerHTML","__html","id","contentEditable","innerText","replace","trim","play","Contacts","setCurrentContact","contactsF","setContactsF","class","toLowerCase","filter","u","startsWith","unreadMessages","m","online","Tab","props","Icon","icon","paddingTop","label","Nav","FaHome","FaUserAlt","removeItem","SocketClient","disconnect","location","href","FiLogOut","ChatApp","setContacts","App","getItem","parse","users","allUsers","_id","userId","groupChat","from","exact","path","createContext","AppProvider","children","Provider","ReactDOM","render"],"mappings":"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","file":"static/js/main.d27d0604.chunk.js","sourcesContent":["const headers = {\r\n    \"Content-Type\": \"application/json\",\r\n};\r\n\r\nconst client = {};\r\n\r\nclient.get = (url) => {\r\n    return fetch(url).then((e) => e.json());\r\n};\r\n\r\nclient.post = (url, body) => {\r\n    return fetch(url, {\r\n        method: \"POST\",\r\n        body: JSON.stringify(body),\r\n        headers,\r\n    }).then((e) => e.json());\r\n};\r\n\r\nexport default client;\r\n","import React, { Component, useContext, useState } from 'react'\r\nimport './CSS/login.css'\r\nimport Context from \"../Context\"\r\nimport client from '../api/client';\r\nimport { useHistory, Redirect, Link } from \"react-router-dom\";\r\n\r\nfunction Login(){\r\n    const {setUser,user} = useContext(Context);\r\n    const [email, setEmail] = useState(\"\")\r\n    const [password, setPassword] = useState(\"\")\r\n    const [error, setError] = useState(\"\")\r\n    const history = useHistory();\r\n\r\n    const handleSubmit = (e)=>{\r\n        e.preventDefault()\r\n        \r\n        client\r\n            .post(\"/auth/login\", {\r\n                email,\r\n                password,\r\n            })\r\n            .then((res) => {\r\n                if (res.error) {\r\n                    setError(res.error);\r\n                } else {\r\n                    // setError(JSON.stringify(res))\r\n                    setUser(res.user);\r\n                    history.push(\"/\");\r\n                    localStorage.setItem(\"user\", JSON.stringify(res.user));\r\n                }\r\n            });\r\n    }\r\n\r\n    if(user){\r\n        return <Redirect to=\"/\" />\r\n    }\r\n\r\n    return (\r\n        <div className=\"login\">\r\n            <form onSubmit={handleSubmit}>\r\n                <h1>Login</h1>\r\n                <p style={{ color: \"red\" }}>{error}</p>\r\n                <input\r\n                    onChange={(e) => setEmail(e.target.value)}\r\n                    type=\"email\"\r\n                    placeholder=\"Email\"\r\n                />\r\n                <input\r\n                    onChange={(e) => setPassword(e.target.value)}\r\n                    type=\"password\"\r\n                    placeholder=\"Password\"\r\n                />\r\n                <input type=\"submit\" value=\"login\" />\r\n                <p>\r\n                    If not registered then <Link to=\"/signup\">Signup</Link>\r\n                </p>\r\n            </form>\r\n        </div>\r\n    );\r\n}\r\n\r\nLogin.contextType = Context;\r\n\r\nexport default Login\r\n","import React, { Component, useState, useContext } from \"react\";\r\nimport \"./CSS/login.css\";\r\nimport client from \"../api/client\";\r\nimport { Link, useHistory } from \"react-router-dom\";\r\n\r\nfunction Signup() {\r\n    const [name, setName] = useState(\"\");\r\n    const [email, setEmail] = useState(\"\");\r\n    const [password, setPassword] = useState(\"\");\r\n    const [username, setUsername] = useState(\"\");\r\n    const [error, setError] = useState(\"\");\r\n    const [success, setSuccess] = useState(\"\");\r\n    const history = useHistory();\r\n\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n\r\n        client\r\n            .post(\"/auth/signup\", {\r\n                name,\r\n                email,\r\n                password,\r\n                username,\r\n            })\r\n            .then((res) => {\r\n                if (res.error) {\r\n                    setError(res.error);\r\n                } else {\r\n                    setSuccess(\"you are registered successfully\");\r\n                    setTimeout(() => {\r\n                        history.push(\"/login\");\r\n                    }, 2000);\r\n                }\r\n            });\r\n    };\r\n    return (\r\n        <div className=\"login\">\r\n            <form onSubmit={handleSubmit}>\r\n                <h1>Signup</h1>\r\n                <p style={{ color: \"red\" }}>{error}</p>\r\n                <p style={{ color: \"green\" }}>{success}</p>\r\n                <input\r\n                    onChange={(e) => setName(e.target.value)}\r\n                    type=\"text\"\r\n                    name=\"name\"\r\n                    placeholder=\"name\"\r\n                />\r\n                <input\r\n                    onChange={(e) => setUsername(e.target.value)}\r\n                    type=\"text\"\r\n                    placeholder=\"username\"\r\n                />\r\n                <input\r\n                    onChange={(e) => setEmail(e.target.value)}\r\n                    type=\"email\"\r\n                    name=\"email\"\r\n                    placeholder=\"email\"\r\n                />\r\n                <input\r\n                    onChange={(e) => setPassword(e.target.value)}\r\n                    type=\"password\"\r\n                    name=\"pwd\"\r\n                    placeholder=\"password\"\r\n                />\r\n                <input type=\"submit\" value=\"signup\" />\r\n                <p>\r\n                    If already registered then <Link to=\"/login\">Login</Link>\r\n                </p>\r\n            </form>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Signup;\r\n","import React,{useContext} from 'react'\r\nimport {Context} from \"../Context\"\r\nimport { Redirect, useHistory } from 'react-router-dom';\r\nimport { IoIosArrowBack } from \"react-icons/io\";\r\n\r\nfunction Profile() {\r\n    // let user = localStorage.getItem(\"user\")\r\n    let {user} = useContext(Context);\r\n    const history = useHistory()\r\n    // if(user){ \r\n    //     user = JSON.parse(user)\r\n    // }\r\n    // else{\r\n    //     user = {}\r\n    // }\r\n    if(!user){\r\n        return <Redirect to='/' />\r\n    }\r\n    return (\r\n        <div>\r\n        <div style={{display:'flex'}}>\r\n        <div onClick={()=>{\r\n            history.push('/')\r\n        }} style={{cursor:'pointer',margin:10,display:'flex',alignItems:'center',alignSelf:'flex-start', padding:10,background:'steelblue',color:'white', borderRadius:5}}>\r\n            <IoIosArrowBack size={32} /> Go to Home\r\n        </div>\r\n        </div>\r\n        <div style={{display:\"flex\", flexDirection:\"column\",alignItems:\"center\",  justifyContent:\"center\"}}>\r\n            \r\n            <div flex=\"4\">\r\n            <p>Name: {user.name}</p>\r\n            <p>email: {user.email}</p>\r\n            <p>username: {user.username}</p>\r\n            {/* <p>email: {user.email}</p> */}\r\n            {/* <p>Phone No. : {user.mobile}</p> */}\r\n            </div>\r\n            \r\n        </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Profile\r\n","class SocketClient {\r\n    constructor() {\r\n        this.socket = window.io(\"/\");\r\n        this.socket.on(\"connect\", (e) => {\r\n            this.onConnect();\r\n            this.onMessage();\r\n        });\r\n    }\r\n    onConnect() {\r\n        // alert(\"Connected to backend\");\r\n    }\r\n    onMessage() {\r\n        this.socket.on(\"sentMessage\", (data) => {\r\n            console.log(\"RECEIVED\", data);\r\n        });\r\n    }\r\n    sendMessage(message) {\r\n        this.socket.emit(\"message\", { text: message });\r\n    }\r\n}\r\n\r\nexport default new SocketClient().socket;\r\n","const newMessage = new Audio(\r\n    \"https://www.mobilesringtones.com/static/p/ringtones/2017/10/02/15726/15726.mp3?title=15726_download_iphone_sms_original_ringtone_iphone_sms_ringtones.mp3\"\r\n);\r\n\r\nconst newUser = new Audio(\r\n    \"https://www.mobilesringtones.com/static/p/ringtones/2017/11/26/15953/15953.mp3?title=15953_download_mesg_ting_ringtone_apple_sms_ringtones.mp3\"\r\n);\r\n\r\nconst messageSent = new Audio(\r\n    \"https://fsb.zobj.net/download/bHTSKVD0pv8_4rq--Z8g7fhojB2O5VH143lYmr205vVtLj8tnIh7yL9elamAe88Zs2z7EgWnCdeLaGein239bmckpam5mKQK8LIsw1BoMNNmTIUW47Y0lCgzGwN0/?a=web&c=72&f=pop_up_sms_tone.mp3&special=1603348222-f3GLlOXpN82goF5WwVpLp8aUmOZjkPgVdmnDje6rCso%3D\"\r\n);\r\n\r\nconst sounds = {\r\n    NEW_MESSAGE: newMessage,\r\n    USER_JOINED: newUser,\r\n    MESSAGE_SENT: messageSent,\r\n};\r\n\r\nexport default sounds;\r\n","import React, { useContext, useState } from \"react\";\r\nimport \"./CSS/ChatBox.css\";\r\nimport { Context } from \"../Context\";\r\nimport socket from \"../SocketClient\";\r\nimport { useEffect } from \"react\";\r\nimport SocketClient from \"../SocketClient\";\r\nimport sounds from \"../helpers/sound\";\r\nimport { BsArrowDownShort } from \"react-icons/bs\";\r\n\r\nfunction ChatBox() {\r\n    const { user } = useContext(Context);\r\n    const { contacts, messages, currentContact, setMessages } = useContext(\r\n        Context\r\n    );\r\n    const CONTACT = contacts?.find((user) => user.uid === currentContact) || {};\r\n    const MESSAGES = messages[currentContact] || [];\r\n    const text = document.getElementById(\"textarea\");\r\n    const messageRef = React.useRef();\r\n\r\n    const scrollToBottom = () => {\r\n        messageRef.current.scrollTo({\r\n            top: messageRef.current.scrollHeight,\r\n            behavior: \"smooth\",\r\n        });\r\n    };\r\n\r\n    useEffect(() => {\r\n        setMessages((prev) => {\r\n            if (!prev[currentContact]) {\r\n                prev[currentContact] = [];\r\n            }\r\n            return {\r\n                ...prev,\r\n                [currentContact]: [...prev[currentContact]].map((e) => ({\r\n                    ...e,\r\n                    unread: undefined,\r\n                })),\r\n            };\r\n        });\r\n    }, [currentContact]);\r\n\r\n    useEffect(() => {\r\n        if (MESSAGES[MESSAGES.length - 1]?.user) {\r\n            scrollToBottom();\r\n        }\r\n    }, [messages]);\r\n\r\n    function send() {\r\n        let message = text.innerText;\r\n        message = message.replace(/\\n/g, \"<br>\").trim();\r\n        console.log(message);\r\n        if (message.trim() === \"\") {\r\n            return;\r\n        }\r\n        socket.emit(\"message\", { text: message, to: currentContact });\r\n        sounds.MESSAGE_SENT.play();\r\n        text.innerText = \"\";\r\n        setMessages((prev) => {\r\n            if (!prev[currentContact]) {\r\n                prev[currentContact] = [];\r\n            }\r\n            return {\r\n                ...prev,\r\n                [currentContact]: [\r\n                    ...prev[currentContact],\r\n                    { text: message, user: true },\r\n                ],\r\n            };\r\n        });\r\n    }\r\n    return (\r\n        <div className=\"chatbox\">\r\n            <header>\r\n                <h1 style={{ marginLeft: 10 }}>{CONTACT.username}</h1>\r\n            </header>\r\n            <div className=\"sections\" ref={messageRef}>\r\n                {MESSAGES.map((message) => {\r\n                    return (\r\n                        <div\r\n                            style={{\r\n                                display: \"flex\",\r\n                                flexDirection: \"column\",\r\n                            }}\r\n                        >\r\n                            {message.sender && message.sender !== user.username && (\r\n                                <span\r\n                                    style={{\r\n                                        margin: \"0 0 -10px 10px\",\r\n                                        color: \"grey\",\r\n                                        fontSize: \"90%\"\r\n                                    }}\r\n                                >\r\n                                    {message.sender}\r\n                                </span>\r\n                            )}\r\n                            <div\r\n                                className={`${\r\n                                    message.user || message.sender === user.username\r\n                                        ? \"message_sender\"\r\n                                        : \"message_receiver\"\r\n                                } message`}\r\n                                dangerouslySetInnerHTML={{\r\n                                    __html: message.text,\r\n                                }}\r\n                            ></div>\r\n                            {/* {\r\n                                    message.user && <div className=\"message message_sender\">{message.text}</div>\r\n                                }\r\n                                {\r\n                                    !message.user && <div className=\"message message_receiver\">{message.text}</div>\r\n                                } */}\r\n                        </div>\r\n                    );\r\n                })}\r\n            </div>\r\n            <footer>\r\n                    <div className=\"scroll-top\" onClick={scrollToBottom}>\r\n                    <BsArrowDownShort size={34} color=\"white\" />\r\n                </div>\r\n                {/* <div id=\"search-container\">\r\n                    <div>\r\n                        <div class=\"material-icons icon\">search</div>\r\n                            <input id=\"search\" type=\"text\" placeholder=\"item...\" />\r\n                    </div>\r\n                </div> */}\r\n                <div id=\"text-container\">\r\n                    <p\r\n                        id=\"textarea\"\r\n                        placeholder=\"Type a message..\"\r\n                        contentEditable={true}\r\n                    ></p>\r\n                    <button onClick={send}>send</button>\r\n                </div>\r\n            </footer>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default ChatBox;\r\n","import React, { Component, useState, useContext } from \"react\";\r\nimport \"./CSS/Contacts.css\";\r\nimport { Context } from \"../Context\";\r\nimport { useEffect } from \"react\";\r\n\r\nfunction Contacts() {\r\n    const {\r\n        contacts,\r\n        setCurrentContact,\r\n        currentContact,\r\n        messages,\r\n    } = useContext(Context);\r\n    const [contactsF, setContactsF] = useState(contacts);\r\n    useEffect(() => {\r\n        setContactsF(contacts);\r\n    }, [contacts]);\r\n    const filterContacts = (e) => {\r\n        const text = e.target.value.toLowerCase();\r\n        setContactsF(\r\n            contacts.filter((u) => u.username.toLowerCase().startsWith(text))\r\n        );\r\n    };\r\n    return (\r\n        <div class=\"container\">\r\n            <div className=\"search\">\r\n                <input\r\n                    type=\"search\"\r\n                    placeholder=\"Search contact\"\r\n                    onChange={filterContacts}\r\n                />\r\n            </div>\r\n            <div className=\"friends\">\r\n                {!contacts && <div>Loading contacts...</div>}\r\n                {contactsF?.length == 0 && <div>No contacts to show.</div>}\r\n                {contactsF?.map((user) => {\r\n                    const MESSAGES = messages[user.uid] || [];\r\n                    const unreadMessages = MESSAGES.filter((m) => m.unread)\r\n                        .length;\r\n                    return (\r\n                        <div\r\n                            className={`${\r\n                                user.uid === currentContact\r\n                                    ? \"active_contact\"\r\n                                    : \"\"\r\n                            } contact`}\r\n                            onClick={(e) => setCurrentContact(user.uid)}\r\n                        >\r\n                            <div className=\"contact_name\">\r\n                                {user.username}\r\n                                {user.online && <div className=\"online\"></div>}\r\n                            </div>\r\n                            {unreadMessages > 0 &&\r\n                                user.uid !== currentContact && (\r\n                                    <div className=\"badge\">\r\n                                        {unreadMessages}\r\n                                    </div>\r\n                                )}\r\n                        </div>\r\n                    );\r\n                })}\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\nexport default Contacts;\r\n","import React from 'react'\r\nimport \"./Tab.css\"\r\n\r\nfunction Tab(props) {\r\n    const Icon = props.icon\r\n    return (\r\n        <div className=\"navigation__tab\" {...props}>\r\n            <Icon style={{color:\"white\",fontSize:props.size}} />\r\n            <div style={{color:\"white\",paddingTop:\"10px\"}}>{props.label}</div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Tab\r\n","import React, { Component, useContext } from \"react\";\r\nimport \"./Nav.css\";\r\nimport { FaBeer, FaHome, FaUserAlt, FaUsers } from \"react-icons/fa\";\r\nimport { FiLogOut } from \"react-icons/fi\";\r\nimport Tab from \"./Tab\";\r\nimport { useHistory, Link } from \"react-router-dom\";\r\nimport Context from \"../../Context\";\r\nimport SocketClient from \"../../SocketClient\";\r\n\r\nfunction Nav() {\r\n    const history = useHistory();\r\n    const { setUser } = useContext(Context);\r\n    return (\r\n        <div className=\"Nav\">\r\n            <Link to=\"/\">\r\n                <Tab label=\"Home\" icon={FaHome} size={32} />\r\n            </Link>\r\n            <Link to=\"/profile\">\r\n                <Tab label=\"Profile\" icon={FaUserAlt} size={32} />\r\n            </Link>\r\n            <Tab\r\n                onClick={() => {\r\n                    localStorage.removeItem(\"user\");\r\n                    setUser(null);\r\n                    SocketClient.disconnect();\r\n                    window.location.href = \"/login\";\r\n                }}\r\n                label=\"Logout\"\r\n                icon={FiLogOut}\r\n                size={32}\r\n            />\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Nav;\r\n","import React, { Component, useContext } from 'react'\r\nimport ChatBox from './ChatBox'\r\nimport Contacts from './Contacts'\r\nimport  Nav from './Nav/Nav'\r\nimport Context from '../Context'\r\nimport { Redirect } from 'react-router-dom'\r\nimport client from '../api/client'\r\n\r\nfunction ChatApp(){\r\n    const { user, setContacts, setCurrentContact } = useContext(Context);\r\n    if(!user){\r\n        return <Redirect to='/login' />\r\n    }\r\n    return (\r\n        <div>\r\n            <ChatBox/>\r\n            <Contacts/>\r\n            <Nav/>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ChatApp\r\n","import React, { Component, useState, useEffect, useContext } from \"react\";\r\n\r\nimport Login from \"./Components/Login\";\r\nimport Signup from \"./Components/Signup\";\r\nimport Profile from \"./Components/Profile\";\r\nimport ChatApp from \"./Components/ChatApp\";\r\n\r\n// Uncaught SyntaxError: Unexpected token '!'\r\n\r\n// React context API\r\n\r\nimport { BrowserRouter as Router, Switch, Route, Link } from \"react-router-dom\";\r\nimport SocketClient from \"./SocketClient\";\r\nimport Context from \"./Context\";\r\nimport sound from \"./helpers/sound\";\r\nimport sounds from \"./helpers/sound\";\r\n\r\nexport function App() {\r\n    const {\r\n        setUser,\r\n        user,\r\n        setContacts,\r\n        setMessages,\r\n        currentContact,\r\n        contacts,\r\n        setCurrentContact,\r\n    } = useContext(Context);\r\n    useEffect(() => {\r\n        let u = localStorage.getItem(\"user\");\r\n        if (u) {\r\n            console.log(u);\r\n            u = JSON.parse(u);\r\n            setUser(u);\r\n        }\r\n        SocketClient.on(\"allUsers\", (users) => {\r\n            if (users.length == 0) {\r\n                setContacts([]);\r\n                return;\r\n            }\r\n            let allUsers = users.map((user) => ({ ...user, uid: user._id }));\r\n            const group = { uid: \"groupChat\", username: \"Mega Chat\" };\r\n            setContacts([...allUsers, group]);\r\n            setCurrentContact(allUsers[0].uid);\r\n        });\r\n        SocketClient.on(\"newUser\", (userId) => {\r\n            setContacts((users) =>\r\n                users?.map((e) => {\r\n                    return e.uid === userId ? { ...e, online: true } : e;\r\n                })\r\n            );\r\n        });\r\n        SocketClient.on(\"userLeft\", (userId) => {\r\n            setContacts((users) =>\r\n                users?.map((e) => {\r\n                    return e.uid === userId ? { ...e, online: false } : e;\r\n                })\r\n            );\r\n        });\r\n\r\n        SocketClient.on(\"groupChats\", (data) => {\r\n            setMessages((prev) => {\r\n                if (!prev.groupChat) {\r\n                    prev.groupChat = [];\r\n                }\r\n                return {\r\n                    ...prev,\r\n                    groupChat: data.map((e) => ({ ...e, sender: e.from })),\r\n                };\r\n            });\r\n        });\r\n\r\n        SocketClient.on(\"receiveMessage\", (data) => {\r\n            sounds.NEW_MESSAGE.play();\r\n            let from = data.from;\r\n            console.log(data);\r\n            if (data.sender) {\r\n                from = \"groupChat\";\r\n                console.log(contacts);\r\n            }\r\n            setMessages((prev) => {\r\n                if (!prev[from]) {\r\n                    prev[from] = [];\r\n                }\r\n                return {\r\n                    ...prev,\r\n                    [from]: [\r\n                        ...prev[from],\r\n                        {\r\n                            text: data.text,\r\n                            unread: true,\r\n                            sender:\r\n                                from === \"groupChat\" ? data.sender : undefined,\r\n                        },\r\n                    ],\r\n                };\r\n            });\r\n        });\r\n    }, []);\r\n    useEffect(() => {\r\n        if (user) {\r\n            SocketClient.emit(\"join\", user);\r\n        }\r\n    }, [user]);\r\n    return (\r\n        <Router>\r\n            <div>\r\n                <Switch>\r\n                    <Route exact path=\"/\">\r\n                        <ChatApp />\r\n                    </Route>\r\n                    <Route path=\"/login\">\r\n                        <Login />\r\n                    </Route>\r\n                    <Route path=\"/profile\">\r\n                        <Profile />\r\n                    </Route>\r\n                    <Route path=\"/signup\">\r\n                        <Signup />\r\n                    </Route>\r\n                </Switch>\r\n            </div>\r\n        </Router>\r\n    );\r\n}\r\n\r\nexport default App;\r\n","import React, { createContext } from \"react\";\r\nimport { useState } from \"reinspect\";\r\nimport App from \"./App\";\r\n\r\nexport const Context = createContext()\r\n\r\nexport function AppProvider({children}){\r\n    const [user, setUser] = React.useState(null);\r\n    const [contacts, setContacts] = useState(null, \"contacts\");\r\n    const [messages, setMessages] = useState({}, \"messages\");\r\n    const [currentContact, setCurrentContact] = useState(\r\n        null,\r\n        \"currentContact\"\r\n    );\r\n\r\n    return (\r\n        <Context.Provider value={{\r\n            user,setUser,\r\n            messages,setMessages,\r\n            contacts,setContacts,\r\n            currentContact,setCurrentContact\r\n            }} >\r\n                {children}\r\n        </Context.Provider>\r\n    )\r\n}\r\n\r\nexport default Context","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport {AppProvider} from './Context';\r\nimport App from \"./App\";\r\nimport { StateInspector } from 'reinspect'\r\n\r\nReactDOM.render(\r\n  <StateInspector name=\"Chat\">\r\n    <AppProvider>\r\n    <App />\r\n  </AppProvider>\r\n  </StateInspector>,\r\n  document.getElementById('root')\r\n);\r\n"],"sourceRoot":""}